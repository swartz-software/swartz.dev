{"version":3,"sources":["Theme.ts","components/Background/index.tsx","components/Footer/index.tsx","components/Header/HeaderButton.tsx","components/Header/Name.tsx","components/Header/SpecialButton.tsx","components/content/Bullet/index.tsx","components/content/InlineImage/index.tsx","components/content/index.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["LightTheme","mode","colors","primaryLight","primary","primaryDark","complementLight","complement","complementDark","analogLight","analog","analogDark","highlight","disabled","warning","background","backgroundAlt","textPrimaryLight","textPrimary","textComplementLight","textComplement","textAnalogLight","textAnalog","textHighlight","textDisabled","textWarning","textBackground","textBackgroundAlt","DarkTheme","ThemeContext","React","createContext","ThemeProvider","Provider","useColor","Consumer","useContext","CurvedCorner","x1","y1","x2","y2","orientation","radius","d","fill","stroke","stroke-width","strokeDasharray","ContentLine","side","top","size","backgroundWidth","width","height","cornerOrientation","cornerX1","cornerX2","cornerY1","cornerY2","lineX1","lineX2","lineY1","lineY2","getContentVars","className","style","justifyContent","flexDirection","strokeWidth","title","headerLinks","specialLink","children","titleLength","length","Array","useState","window","innerWidth","setWidth","useLayoutEffect","updateWidth","addEventListener","removeEventListener","name","map","to","e","i","backgroundColor","HeaderButton","href","color","Name","SpecialButton","boxShadow","textShadow","Bullet","align","direction","textAlign","InlineImage","Content","id","alignItems","marginLeft","marginRight","Arrow","startX","startY","endX","endY","point1X","marginBottom","Boolean","location","hostname","match","ReactDOM","render","themeMode","useEffect","document","body","value","position","getElementById","navigator","serviceWorker","ready","then","registration","a","unregister","catch","error"],"mappings":"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","file":"static/js/main.e5060fe8.chunk.js","sourcesContent":["import React, { useContext } from 'react';\n\nexport type Theme = {\n  mode: 'light' | 'dark';\n  colors: {\n    primaryLight: string;\n    primary: string;\n    primaryDark: string;\n    complementLight: string;\n    complement: string;\n    complementDark: string;\n    analogLight: string;\n    analog: string;\n    analogDark: string;\n    highlight: string;\n    disabled: string;\n    warning: string;\n    background: string;\n    backgroundAlt: string;\n    textPrimaryLight: string;\n    textPrimary: string;\n    textComplementLight: string;\n    textComplement: string;\n    textAnalogLight: string;\n    textAnalog: string;\n    textHighlight: string;\n    textDisabled: string;\n    textWarning: string;\n    textBackground: string;\n    textBackgroundAlt: string;\n  };\n};\nexport const LightTheme: Theme = {\n  mode: 'light',\n  colors: {\n    primaryLight: '#C19594',\n    primary: '#A56363',\n    primaryDark: '#744344',\n    complementLight: '#A395C1',\n    complement: '#7A64A5',\n    complementDark: '#534373',\n    analogLight: '#96A4C1',\n    analog: '#6479A5',\n    analogDark: '#435474',\n    highlight: '#64A565',\n    disabled: '#808080',\n    warning: '#CC3F34',\n    background: '#E5E5E5',\n    backgroundAlt: '#B8B8B8',\n    textPrimaryLight: '#FFFFFF',\n    textPrimary: '#000000',\n    textComplementLight: '#FFFFFF',\n    textComplement: '#000000',\n    textAnalogLight: '#FFFFFF',\n    textAnalog: '#000000',\n    textHighlight: '#FFFFFF',\n    textDisabled: '#FFFFFF',\n    textWarning: '#FFFFFF',\n    textBackground: '#000000',\n    textBackgroundAlt: '#7A64A5',\n  },\n};\nexport const DarkTheme: Theme = {\n  mode: 'dark',\n  colors: {\n    primaryLight: '#A56363',\n    primary: '#744344',\n    primaryDark: '#473233',\n    complementLight: '#7A64A5',\n    complement: '#534373',\n    complementDark: '#393247',\n    analogLight: '#6479A5',\n    analog: '#435474',\n    analogDark: '#333A46',\n    highlight: '#447343',\n    disabled: '#666666',\n    warning: '#A43328',\n    background: '#4D4D4D',\n    backgroundAlt: '#2A2A2A',\n    textPrimaryLight: '#FFFFFF',\n    textPrimary: '#FFFFFF',\n    textComplementLight: '#FFFFFF',\n    textComplement: '#FFFFFF',\n    textAnalogLight: '#FFFFFF',\n    textAnalog: '#FFFFFF',\n    textHighlight: '#FFFFFF',\n    textDisabled: '#BBBBBB',\n    textWarning: '#FFFFFF',\n    textBackground: '#FFFFFF',\n    textBackgroundAlt: '#A395C1',\n  },\n};\n\nconst ThemeContext = React.createContext<Theme>(LightTheme);\n\nexport const ThemeProvider = ThemeContext.Provider;\nexport const ThemeConsumer = ThemeContext.Consumer;\n\nexport const useMode = () => {\n  const { mode } = useContext(ThemeContext);\n\n  return mode;\n};\n\nexport const useColor = () => {\n  const { colors } = useContext(ThemeContext);\n\n  return colors;\n};\n","import React, { useLayoutEffect, useState } from 'react';\n\nimport './Background.scss';\nimport { HeaderButton, Name, SpecialButton } from 'components';\nimport { ContentElement } from 'components/content';\n\ntype Link = {\n  title: string;\n  to: string;\n};\ntype Props = {\n  title: string;\n  headerLinks: Link[];\n  specialLink?: Link;\n  children: ContentElement | Array<ContentElement>;\n};\n\nconst CurvedCorner = ({\n  x1,\n  y1,\n  x2,\n  y2,\n  orientation,\n  radius,\n}: {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  orientation: number;\n  radius: number;\n}) => (\n  <path\n    d={`M ${x1} ${y1} A ${radius} ${radius} 0 0 ${orientation} ${x2} ${y2}`}\n    fill=\"none\"\n    stroke=\"black\"\n    stroke-width=\"1\"\n    strokeDasharray={'4 2'}\n  />\n);\n\nconst getContentVars = (\n  side: 'left' | 'right',\n  top: boolean,\n  size: number,\n  radius: number,\n  width: number,\n) => {\n  if (top) {\n    return {\n      height: radius,\n      width: size,\n      cornerOrientation: side === 'left' ? 1 : 0,\n      cornerX1: side === 'left' ? size : 0,\n      cornerX2: side === 'left' ? size - radius : radius,\n      cornerY1: 0,\n      cornerY2: radius,\n      lineX1: radius,\n      lineX2: size - radius,\n      lineY1: radius,\n      lineY2: radius,\n    };\n  } else if (side === 'left') {\n    return {\n      height: size,\n      width: radius,\n      cornerOrientation: 0,\n      cornerX1: radius,\n      cornerX2: 0,\n      cornerY1: 0,\n      cornerY2: radius,\n      lineX1: 0,\n      lineX2: 0,\n      lineY1: radius,\n      lineY2: size,\n    };\n  } else {\n    return {\n      height: size,\n      width: radius,\n      cornerOrientation: 1,\n      cornerX1: width - radius,\n      cornerX2: width,\n      cornerY1: 0,\n      cornerY2: radius,\n      lineX1: width,\n      lineX2: width,\n      lineY1: radius,\n      lineY2: size,\n    };\n  }\n};\n\nconst ContentLine = ({\n  side,\n  top,\n  size,\n  radius,\n  width: backgroundWidth,\n}: {\n  side: 'left' | 'right';\n  top?: boolean;\n  size: number;\n  radius: number;\n  width: number;\n}) => {\n  const {\n    height,\n    width,\n    cornerOrientation,\n    cornerX1,\n    cornerX2,\n    cornerY1,\n    cornerY2,\n    lineX1,\n    lineX2,\n    lineY1,\n    lineY2,\n  } = getContentVars(side, top ?? false, size, radius, backgroundWidth);\n\n  return (\n    <div\n      className={'background-content'}\n      style={{\n        width: backgroundWidth,\n        justifyContent: side === 'right' ? 'flex-end' : 'flex-start',\n        flexDirection: top ? 'column' : 'row',\n      }}>\n      <svg height={height} width={width}>\n        <CurvedCorner\n          orientation={cornerOrientation}\n          radius={radius}\n          x1={cornerX1}\n          x2={cornerX2}\n          y1={cornerY1}\n          y2={cornerY2}\n        />\n        <line\n          style={{\n            stroke: 'rgb(0,0,0)',\n            strokeWidth: 1,\n          }}\n          x1={lineX1}\n          x2={lineX2}\n          y1={lineY1}\n          y2={lineY2}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default ({ title, headerLinks, specialLink, children }: Props) => {\n  const titleLength = title.length * 36;\n  const nContent = children instanceof Array ? children.length : 1;\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useLayoutEffect(() => {\n    const updateWidth = () => setWidth(window.innerWidth);\n\n    window.addEventListener('resize', updateWidth);\n\n    return () => {\n      window.removeEventListener('resize', updateWidth);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className={'header'}>\n        <Name name={title} width={titleLength} />\n        <nav>\n          {headerLinks.map(({ title, to }) => (\n            <HeaderButton title={title} to={to} />\n          ))}\n          {specialLink && (\n            <SpecialButton\n              className={'special'}\n              title={specialLink.title}\n              to={specialLink.to}\n            />\n          )}\n        </nav>\n      </div>\n      <div className={'content'}>{children}</div>\n      <div className={'background'} style={{ width: width }}>\n        <svg className={'background-header'} height={96}>\n          <line\n            style={{\n              stroke: 'rgb(0,0,0)',\n              strokeWidth: 1,\n            }}\n            x1={0}\n            x2={0}\n            y1={0}\n            y2={10}\n          />\n          <line\n            style={{\n              stroke: 'rgb(0,0,0)',\n              strokeWidth: 1,\n            }}\n            x1={0}\n            x2={titleLength}\n            y1={5}\n            y2={5}\n          />\n          <line\n            style={{\n              stroke: 'rgb(0,0,0)',\n              strokeWidth: 1,\n            }}\n            x1={titleLength}\n            x2={titleLength}\n            y1={0}\n            y2={10}\n          />\n          <line\n            style={{\n              stroke: 'rgb(0,0,0)',\n              strokeWidth: 1,\n            }}\n            x1={titleLength / 2}\n            x2={titleLength / 2}\n            y1={5}\n            y2={64}\n          />\n          <CurvedCorner\n            orientation={1}\n            radius={32}\n            x1={titleLength / 2}\n            x2={titleLength / 2 - 32}\n            y1={64}\n            y2={96}\n          />\n          <line\n            style={{\n              stroke: 'rgb(0,0,0)',\n              strokeWidth: 1,\n            }}\n            x1={32}\n            x2={width - 224}\n            y1={96}\n            y2={96}\n          />\n        </svg>\n        {children instanceof Array ? (\n          children.map((e, i) => (\n            <>\n              {i !== 0 && (\n                <ContentLine\n                  top\n                  radius={32}\n                  side={i % 2 === 0 ? 'left' : 'right'}\n                  size={width - 143}\n                  width={width - 143}\n                />\n              )}\n              <ContentLine\n                radius={32}\n                side={i % 2 === 0 ? 'left' : 'right'}\n                size={512}\n                width={width - 143}\n              />\n            </>\n          ))\n        ) : (\n          <svg className={'background-content content-1'} height={512}>\n            <line\n              style={{\n                stroke: 'rgb(0,0,0)',\n                strokeWidth: 1,\n              }}\n              x1={0}\n              x2={0}\n              y1={0}\n              y2={448}\n            />\n            <line\n              style={{\n                stroke: 'rgb(0,0,0)',\n                strokeWidth: 1,\n              }}\n              x1={0}\n              x2={10}\n              y1={448}\n              y2={448}\n            />\n          </svg>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './Footer.scss';\nimport { useColor } from 'Theme';\n\nexport default () => {\n  const { backgroundAlt } = useColor();\n  return (\n    <div className={'footer'} style={{ backgroundColor: backgroundAlt }}></div>\n  );\n};\n","import React from 'react';\n\nimport { useColor } from 'Theme';\n\nimport './HeaderButton.scss';\n\nexport const HeaderButton = ({ title, to }: { title: string; to: string }) => {\n  const { textBackground } = useColor();\n  return (\n    <a\n      href={to}\n      style={{\n        color: textBackground,\n      }}>\n      <div>\n        <div className={'title'}>\n          <h3>{title}</h3>\n        </div>\n      </div>\n    </a>\n  );\n};\n","import React from 'react';\n\nimport { useColor } from 'Theme';\n\nimport './Name.scss';\n\nexport const Name = ({ name, width }: { name: string; width: number }) => {\n  const { textBackground } = useColor();\n\n  return (\n    <a className={'name'} href={'/'}>\n      <h1\n        style={{\n          color: textBackground,\n          width: `${width}px`,\n        }}>\n        {name}\n      </h1>\n    </a>\n  );\n};\n","import React from 'react';\n\nimport { useColor } from 'Theme';\n\nexport const SpecialButton = ({\n  className,\n  title,\n  to,\n}: {\n  className: string;\n  title: string;\n  to: string;\n}) => {\n  const { highlight, textHighlight } = useColor();\n\n  return (\n    <a\n      href={to}\n      style={{\n        color: textHighlight,\n      }}>\n      <div\n        className={className}\n        style={{\n          backgroundColor: highlight,\n          boxShadow: '0 1px 2px black',\n        }}>\n        <div className={'title'}>\n          <h3\n            style={{\n              textShadow: '0 -1px 1px #117711',\n            }}>\n            {title}\n          </h3>\n        </div>\n      </div>\n    </a>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { Arrow, ContentItemProps } from 'components/content';\n\nimport './Bullet.scss';\n\nexport type BulletType = FunctionComponent<\n  ContentItemProps & {\n    align?: 'left' | 'right';\n    size: 'full' | '1:1' | '1:2';\n  }\n>;\n\nexport const Bullet: BulletType = ({\n  title,\n  size,\n  align = 'left',\n  children,\n}) => {\n  return (\n    <div\n      className={'bullet'}\n      style={{ justifyContent: align === 'right' ? 'flex-end' : 'flex-start' }}>\n      {align === 'left' && <Arrow direction={align} length={32} />}\n      <h4 style={{ textAlign: align === 'right' ? 'end' : 'start' }}>\n        {title}\n      </h4>\n      <div>{children}</div>\n      {align === 'right' && <Arrow direction={align} length={32} />}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { Arrow, ContentItemProps } from 'components/content';\n\nexport type InlineImageType = FunctionComponent<\n  ContentItemProps & {\n    align?: 'left' | 'right';\n    size: 'full' | '1:1' | '1:2';\n  }\n>;\n\nexport const InlineImage: InlineImageType = ({\n  title,\n  size,\n  align = 'left',\n  children,\n}) => {\n  return (\n    <div\n      className={'inline-image'}\n      style={{ justifyContent: align === 'left' ? 'flex-start' : 'flex-end' }}>\n      {align === 'left' && <Arrow direction={align} length={32} />}\n      <h4>{title}</h4>\n      <div>{children}</div>\n      {align === 'right' && <Arrow direction={align} length={32} />}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Bullet, BulletType } from './Bullet';\nimport { Custom, CustomType } from './Custom';\nimport { Display, DisplayType } from './Display';\nimport { InlineImage, InlineImageType } from './InlineImage';\nimport { Mosaic, MosaicType } from './Mosaic';\nimport './Content.scss';\n\nexport { Bullet, Custom, Display, InlineImage, Mosaic };\n\nexport type ContentItemProps = {\n  title: string;\n  position: number;\n};\nexport type ContentItem =\n  | BulletType\n  | CustomType\n  | DisplayType\n  | InlineImageType\n  | MosaicType;\nexport type ContentProps = {\n  title?: string;\n  id: string;\n  align: 'left' | 'right' | 'center';\n  children: JSX.Element | Array<JSX.Element>;\n};\n\nexport type ContentType = (props: ContentProps) => JSX.Element;\n\nexport const Content: ContentType = ({\n  title,\n  id,\n  align,\n  children,\n}: ContentProps) => {\n  return (\n    <div className={'content-item'} id={id} style={{ alignItems: align }}>\n      {title && (\n        <h2\n          className={'content-title'}\n          style={{\n            textAlign: align,\n            marginLeft: align === 'left' ? 64 : 0,\n            marginRight: align === 'right' ? 64 : 0,\n          }}>\n          {title}\n        </h2>\n      )}\n      <div>{children}</div>\n    </div>\n  );\n};\nexport type ContentElement = React.ReactElement<ContentProps, ContentType>;\n\nexport const Arrow = ({\n  length,\n  direction,\n}: {\n  length: number;\n  direction: 'left' | 'right' | 'down';\n}) => {\n  const startX = direction === 'left' ? 0 : direction === 'right' ? length : 9;\n  const startY = direction === 'down' ? 0 : 10;\n  const endX = direction === 'left' ? length : direction === 'right' ? 0 : 9;\n  const endY = direction === 'down' ? length : 10;\n\n  const point1X =\n    direction === 'down' ? endX : direction === 'left' ? endX - 12 : endX + 12;\n\n  return (\n    <svg\n      className={'arrow'}\n      height={direction === 'down' ? length : 18}\n      style={\n        direction === 'down'\n          ? { marginBottom: 16 }\n          : direction === 'left'\n          ? {\n              marginRight: 16,\n            }\n          : { marginLeft: 16 }\n      }\n      width={direction === 'down' ? 18 : length}>\n      <line\n        style={{\n          stroke: 'rgb(0,0,0)',\n          strokeWidth: 1,\n        }}\n        x1={startX}\n        x2={point1X}\n        y1={startY}\n        y2={endY}\n      />\n      <line\n        style={{\n          stroke: 'rgb(0,0,0)',\n          strokeWidth: 1,\n        }}\n        x1={point1X}\n        x2={point1X}\n        y1={4}\n        y2={16}\n      />\n      <line\n        style={{\n          stroke: 'rgb(0,0,0)',\n          strokeWidth: 1,\n        }}\n        x1={point1X}\n        x2={endX}\n        y1={4}\n        y2={10}\n      />\n      <line\n        style={{\n          stroke: 'rgb(0,0,0)',\n          strokeWidth: 1,\n        }}\n        x1={point1X}\n        x2={endX}\n        y1={16}\n        y2={10}\n      />\n    </svg>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) return;\n\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config?.onUpdate) config.onUpdate(registration);\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config?.onSuccess) config.onSuccess(registration);\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(async registration => {\n        await registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect, useState } from 'react';\n\nimport { DarkTheme, LightTheme, ThemeProvider } from 'Theme';\nimport { Background, Footer } from 'components';\nimport { Bullet, Content, InlineImage } from 'components/content';\n\nexport default () => {\n  const [themeMode, setThemeMode] = useState<'light' | 'dark'>('light');\n\n  useEffect(() => {\n    document.body.style.backgroundColor =\n      themeMode === 'light'\n        ? LightTheme.colors.background\n        : DarkTheme.colors.background;\n  }, [themeMode]);\n\n  return (\n    <ThemeProvider value={themeMode === 'light' ? LightTheme : DarkTheme}>\n      <Background\n        headerLinks={[\n          { title: 'About Us', to: '#about' },\n          { title: 'Projects', to: '#projects' },\n          { title: 'Services', to: '#services' },\n        ]}\n        specialLink={{ title: 'Contact Us', to: '#contact' }}\n        title={'Swartz Software'}>\n        <Content align={'left'} id={'about'} title={'bullet points'}>\n          <Bullet position={0} size={'full'} title={'Mobile'}>\n            hello world\n          </Bullet>\n          <Bullet position={0} size={'full'} title={'Desktop'}>\n            hello world\n          </Bullet>\n          <Bullet position={0} size={'full'} title={'Web'}>\n            hello world\n          </Bullet>\n        </Content>\n        <Content align={'right'} id={'projects'} title={'bullet points'}>\n          <Bullet align={'right'} position={0} size={'full'} title={'Mobile'}>\n            hello world\n          </Bullet>\n          <Bullet align={'right'} position={0} size={'full'} title={'Desktop'}>\n            hello world\n          </Bullet>\n          <Bullet align={'right'} position={0} size={'full'} title={'Web'}>\n            hello world\n          </Bullet>\n        </Content>\n        <Content align={'left'} id={'services'} title={'image test'}>\n          <InlineImage position={0} size={'full'} title={'test'} />\n        </Content>\n        <Content align={'right'} id={'contact'} title={'bullet points'}>\n          <Bullet align={'right'} position={0} size={'full'} title={'Mobile'}>\n            hello world\n          </Bullet>\n          <Bullet align={'right'} position={0} size={'full'} title={'Desktop'}>\n            hello world\n          </Bullet>\n          <Bullet align={'right'} position={0} size={'full'} title={'Web'}>\n            hello world\n          </Bullet>\n        </Content>\n        <Content align={'left'} id={'inlineimage'} title={'image test'}>\n          <InlineImage position={0} size={'full'} title={'test'} />\n        </Content>\n      </Background>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n"],"sourceRoot":""}